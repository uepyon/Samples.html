package samples.string.html;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class HTMLParser {
/**
 * タグの正規表現
 */
	private static Pattern tagPattern = Pattern.compile("(<([^>]+)([^>]*)>)([^<]*)");
	
	private Matcher matcher;
	
	private Tag tag;
	
	int pos;
	
	/**
	 * コンストラクタです。
	 * 
	 * @param src
	 * 			HTMLソース
	 */
	public HTMLParser(String src) {
		matcher = tagPattern.matcher(src);
	}
	
	/**
	 * 次のHTMLタグがあるかどうかを検査します。
	 * 
	 * @return 存在する場合はtrue
	 */
	public boolean hasNext() {
		boolean found = matcher.find();
		if(found) {
			tag = new Tag(matcher.group(1), matcher.group(2), matcher.group(3),matcher.group(4));
		}
		return found;
	}
	
	/**
	 * 次のHTMLタグを返します。
	 * 
	 * @return タグを表すオブジェクト
	 */
	public Tag next() {
		return tag;
	}
 
	public static void main(String[] args) {
		// サンプルのHTMLを用意します。
		StringBuffer sb = new StringBuffer();
		sb.append("<html>");
		sb.append("<head>");
		sb.append("<title>JavaMasterのお店</title>");
		sb.append("</head>");
		sb.append("<body>");
		sb.append("<h1>JavaMasterへようこそ！</h1>");
		sb.append("<p>おいしいコーヒーの");
		sb.append("通信販売を行っています。");
		sb.append("<!--会員用入り口-->");
		sb.append("<a href = 'login.jsp'>ログイン</a>");
		sb.append("</body>");
		sb.append("</html");
		
		//パーサオブジェクトを作成します。
		HTMLParser parser = new HTMLParser(sb.toString());
		
		//タグを順番に処理します。
		while (parser.hasNext()) {
			Tag tag = parser.next();
			System.out.println(tag);
		}

	}

}
